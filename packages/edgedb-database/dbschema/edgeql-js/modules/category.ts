// GENERATED by @edgedb/generate v0.3.3

import * as $ from "../reflection.ts";
import * as _ from "../imports.ts";
import type * as _default from "./default.ts";
import type * as _common from "./common.ts";
import type * as _std from "./std.ts";
import type * as _inventory from "./b2c/inventory.ts";
export type $CategoryλShape = $.typeutil.flatten<_default.$DatedTypeλShape & _default.$HasAvatarλShape & _default.$HasImagesλShape & _common.$AdminRoleHasFullAccessAccessPolicyλShape & {
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "parent": $.LinkDesc<$Category, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "path": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "level": $.PropertyDesc<_std.$int16, $.Cardinality.One, false, false, false, true>;
  "children": $.LinkDesc<$Category, $.Cardinality.Many, {}, false, true,  false, false>;
  "slug": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, true>;
  "<parent[is category::Category]": $.LinkDesc<$Category, $.Cardinality.Many, {}, false, false,  false, false>;
  "<parent[is category::OwnerCategory]": $.LinkDesc<$OwnerCategory, $.Cardinality.Many, {}, false, false,  false, false>;
  "<parent[is category::GlobalCategory]": $.LinkDesc<$GlobalCategory, $.Cardinality.Many, {}, false, false,  false, false>;
  "<children[is category::Category]": $.LinkDesc<$Category, $.Cardinality.Many, {}, false, false,  false, false>;
  "<children[is category::OwnerCategory]": $.LinkDesc<$OwnerCategory, $.Cardinality.Many, {}, false, false,  false, false>;
  "<children[is category::GlobalCategory]": $.LinkDesc<$GlobalCategory, $.Cardinality.Many, {}, false, false,  false, false>;
  "<children": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<parent": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Category = $.ObjectType<"category::Category", $CategoryλShape, null, [
  ..._default.$DatedType['__exclusives__'],
  ..._default.$HasAvatar['__exclusives__'],
  ..._default.$HasImages['__exclusives__'],
  ..._common.$AdminRoleHasFullAccessAccessPolicy['__exclusives__'],
]>;
const $Category = $.makeType<$Category>(_.spec, "75ca7de6-3699-11ee-94a3-21fee451052d", _.syntax.literal);

const Category: $.$expr_PathNode<$.TypeSet<$Category, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Category, $.Cardinality.Many), null);

export type $GlobalCategoryλShape = $.typeutil.flatten<$CategoryλShape & {
  "<global_category[is b2c::inventory::Product]": $.LinkDesc<_inventory.$Product, $.Cardinality.Many, {}, false, false,  false, false>;
  "<global_category[is Product]": $.LinkDesc<_default.$Product, $.Cardinality.Many, {}, false, false,  false, false>;
  "<global_category": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $GlobalCategory = $.ObjectType<"category::GlobalCategory", $GlobalCategoryλShape, null, [
  ...$Category['__exclusives__'],
]>;
const $GlobalCategory = $.makeType<$GlobalCategory>(_.spec, "75d87b94-3699-11ee-93a2-d13ce9cc0e3b", _.syntax.literal);

const GlobalCategory: $.$expr_PathNode<$.TypeSet<$GlobalCategory, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($GlobalCategory, $.Cardinality.Many), null);

export type $OwnerCategoryλShape = $.typeutil.flatten<$CategoryλShape & _common.$HasCompanyOwnerλShape & {
  "<owner_category[is b2c::inventory::Product]": $.LinkDesc<_inventory.$Product, $.Cardinality.Many, {}, false, false,  false, false>;
  "<owner_category[is Product]": $.LinkDesc<_default.$Product, $.Cardinality.Many, {}, false, false,  false, false>;
  "<owner_category": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $OwnerCategory = $.ObjectType<"category::OwnerCategory", $OwnerCategoryλShape, null, [
  ...$Category['__exclusives__'],
  ..._common.$HasCompanyOwner['__exclusives__'],
]>;
const $OwnerCategory = $.makeType<$OwnerCategory>(_.spec, "75f0f516-3699-11ee-8379-591dc9f0cbb8", _.syntax.literal);

const OwnerCategory: $.$expr_PathNode<$.TypeSet<$OwnerCategory, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($OwnerCategory, $.Cardinality.Many), null);



export { $Category, Category, $GlobalCategory, GlobalCategory, $OwnerCategory, OwnerCategory };

type __defaultExports = {
  "Category": typeof Category;
  "GlobalCategory": typeof GlobalCategory;
  "OwnerCategory": typeof OwnerCategory
};
const __defaultExports: __defaultExports = {
  "Category": Category,
  "GlobalCategory": GlobalCategory,
  "OwnerCategory": OwnerCategory
};
export default __defaultExports;
