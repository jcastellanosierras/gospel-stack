// GENERATED by @edgedb/generate v0.3.3

import * as $ from "../../reflection.ts";
import * as _ from "../../imports.ts";
import type * as _default from "../default.ts";
import type * as _account from "./account.ts";
import type * as _std from "../std.ts";
import type * as _common from "../common.ts";
export type $BrandState = {
  "ACTIVE": $.$expr_Literal<$BrandState>;
  "INACTIVE": $.$expr_Literal<$BrandState>;
  "PENDING_REVIEW": $.$expr_Literal<$BrandState>;
} & $.EnumType<"api::product::BrandState", ["ACTIVE", "INACTIVE", "PENDING_REVIEW"]>;
const BrandState: $BrandState = $.makeType<$BrandState>(_.spec, "8af945a8-3699-11ee-8ddb-2da17be91807", _.syntax.literal);

export type $ProductState = {
  "ACTIVE": $.$expr_Literal<$ProductState>;
  "INACTIVE": $.$expr_Literal<$ProductState>;
  "PENDING_REVIEW": $.$expr_Literal<$ProductState>;
} & $.EnumType<"api::product::ProductState", ["ACTIVE", "INACTIVE", "PENDING_REVIEW"]>;
const ProductState: $ProductState = $.makeType<$ProductState>(_.spec, "8af95688-3699-11ee-be61-b1c1f3d07899", _.syntax.literal);

export type $BrandλShape = $.typeutil.flatten<_default.$DatedTypeλShape & _default.$HasImagesλShape & _default.$HasAvatarλShape & {
  "owner": $.LinkDesc<_account.$Account, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "description": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "reference": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "state": $.PropertyDesc<$BrandState, $.Cardinality.One, false, false, false, true>;
  "<brand[is api::product::Product]": $.LinkDesc<$Product, $.Cardinality.Many, {}, false, false,  false, false>;
  "<brands[is api::account::Account]": $.LinkDesc<_account.$Account, $.Cardinality.Many, {}, false, false,  false, false>;
  "<brands[is api_current_account]": $.LinkDesc<_default.$api_current_account, $.Cardinality.Many, {}, false, false,  false, false>;
  "<brand": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<brands": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Brand = $.ObjectType<"api::product::Brand", $BrandλShape, null, [
  ..._default.$DatedType['__exclusives__'],
  ..._default.$HasImages['__exclusives__'],
  ..._default.$HasAvatar['__exclusives__'],
  {name: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Brand = $.makeType<$Brand>(_.spec, "8cef878c-3699-11ee-93a9-bd1a1ceef45a", _.syntax.literal);

const Brand: $.$expr_PathNode<$.TypeSet<$Brand, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Brand, $.Cardinality.Many), null);

export type $CategoryλShape = $.typeutil.flatten<_default.$DatedTypeλShape & _default.$HasAvatarλShape & _default.$HasImagesλShape & _common.$AdminRoleHasFullAccessAccessPolicyλShape & {
  "parent": $.LinkDesc<$Category, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "children": $.LinkDesc<$Category, $.Cardinality.Many, {}, false, true,  false, false>;
  "level": $.PropertyDesc<_std.$int16, $.Cardinality.One, false, false, false, true>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "path": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "slug": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, true>;
  "<parent[is api::product::Category]": $.LinkDesc<$Category, $.Cardinality.Many, {}, false, false,  false, false>;
  "<children[is api::product::Category]": $.LinkDesc<$Category, $.Cardinality.Many, {}, false, false,  false, false>;
  "<parent[is api::product::GlobalCategory]": $.LinkDesc<$GlobalCategory, $.Cardinality.Many, {}, false, false,  false, false>;
  "<children[is api::product::GlobalCategory]": $.LinkDesc<$GlobalCategory, $.Cardinality.Many, {}, false, false,  false, false>;
  "<parent[is api::product::OwnerCategory]": $.LinkDesc<$OwnerCategory, $.Cardinality.Many, {}, false, false,  false, false>;
  "<children[is api::product::OwnerCategory]": $.LinkDesc<$OwnerCategory, $.Cardinality.Many, {}, false, false,  false, false>;
  "<children": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<parent": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Category = $.ObjectType<"api::product::Category", $CategoryλShape, null, [
  ..._default.$DatedType['__exclusives__'],
  ..._default.$HasAvatar['__exclusives__'],
  ..._default.$HasImages['__exclusives__'],
  ..._common.$AdminRoleHasFullAccessAccessPolicy['__exclusives__'],
]>;
const $Category = $.makeType<$Category>(_.spec, "8d4251a6-3699-11ee-8143-e38c01cc1ea1", _.syntax.literal);

const Category: $.$expr_PathNode<$.TypeSet<$Category, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Category, $.Cardinality.Many), null);

export type $GlobalCategoryλShape = $.typeutil.flatten<$CategoryλShape & {
  "<global_category[is api::product::Product]": $.LinkDesc<$Product, $.Cardinality.Many, {}, false, false,  false, false>;
  "<global_category": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $GlobalCategory = $.ObjectType<"api::product::GlobalCategory", $GlobalCategoryλShape, null, [
  ...$Category['__exclusives__'],
]>;
const $GlobalCategory = $.makeType<$GlobalCategory>(_.spec, "8d4f6cf6-3699-11ee-aab6-636082332a09", _.syntax.literal);

const GlobalCategory: $.$expr_PathNode<$.TypeSet<$GlobalCategory, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($GlobalCategory, $.Cardinality.Many), null);

export type $OwnerCategoryλShape = $.typeutil.flatten<$CategoryλShape & {
  "owner": $.LinkDesc<_account.$Account, $.Cardinality.One, {}, false, false,  false, false>;
  "<owner_category[is api::product::Product]": $.LinkDesc<$Product, $.Cardinality.Many, {}, false, false,  false, false>;
  "<owner_category": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $OwnerCategory = $.ObjectType<"api::product::OwnerCategory", $OwnerCategoryλShape, null, [
  ...$Category['__exclusives__'],
]>;
const $OwnerCategory = $.makeType<$OwnerCategory>(_.spec, "8eee9e24-3699-11ee-bcab-67ba55dfffe5", _.syntax.literal);

const OwnerCategory: $.$expr_PathNode<$.TypeSet<$OwnerCategory, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($OwnerCategory, $.Cardinality.Many), null);

export type $ProductλShape = $.typeutil.flatten<_default.$DatedTypeλShape & _default.$HasImagesλShape & {
  "brand": $.LinkDesc<$Brand, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "color": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "ean": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "family": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "family_code": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "is_discontinued": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "is_future_model": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "notes": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "reference": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "sale_price": $.PropertyDesc<_std.$float64, $.Cardinality.AtMostOne, false, false, false, false>;
  "season": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "size": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "year": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "global_category": $.LinkDesc<$GlobalCategory, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "owner_category": $.LinkDesc<$OwnerCategory, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "owner": $.LinkDesc<_account.$Account, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
}>;
type $Product = $.ObjectType<"api::product::Product", $ProductλShape, null, [
  ..._default.$DatedType['__exclusives__'],
  ..._default.$HasImages['__exclusives__'],
  {ean: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Product = $.makeType<$Product>(_.spec, "8cf2359a-3699-11ee-84a8-e3e259210538", _.syntax.literal);

const Product: $.$expr_PathNode<$.TypeSet<$Product, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Product, $.Cardinality.Many), null);



export { BrandState, ProductState, $Brand, Brand, $Category, Category, $GlobalCategory, GlobalCategory, $OwnerCategory, OwnerCategory, $Product, Product };

type __defaultExports = {
  "BrandState": typeof BrandState;
  "ProductState": typeof ProductState;
  "Brand": typeof Brand;
  "Category": typeof Category;
  "GlobalCategory": typeof GlobalCategory;
  "OwnerCategory": typeof OwnerCategory;
  "Product": typeof Product
};
const __defaultExports: __defaultExports = {
  "BrandState": BrandState,
  "ProductState": ProductState,
  "Brand": Brand,
  "Category": Category,
  "GlobalCategory": GlobalCategory,
  "OwnerCategory": OwnerCategory,
  "Product": Product
};
export default __defaultExports;
