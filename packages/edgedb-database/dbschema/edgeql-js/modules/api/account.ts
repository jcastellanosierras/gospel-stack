// GENERATED by @edgedb/generate v0.3.3

import * as $ from "../../reflection.ts";
import * as _ from "../../imports.ts";
import type * as _default from "../default.ts";
import type * as _std from "../std.ts";
import type * as _product from "./product.ts";
export type $ApiPermissons = {
  "API_SELECT": $.$expr_Literal<$ApiPermissons>;
  "API_INSERT": $.$expr_Literal<$ApiPermissons>;
  "API_UPDATE": $.$expr_Literal<$ApiPermissons>;
  "API_DELETE": $.$expr_Literal<$ApiPermissons>;
} & $.EnumType<"api::account::ApiPermissons", ["API_SELECT", "API_INSERT", "API_UPDATE", "API_DELETE"]>;
const ApiPermissons: $ApiPermissons = $.makeType<$ApiPermissons>(_.spec, "93d03e70-3699-11ee-9c3f-2defb13d0c25", _.syntax.literal);

export type $AvailableRole = {
  "ADMIN": $.$expr_Literal<$AvailableRole>;
  "USER": $.$expr_Literal<$AvailableRole>;
} & $.EnumType<"api::account::AvailableRole", ["ADMIN", "USER"]>;
const AvailableRole: $AvailableRole = $.makeType<$AvailableRole>(_.spec, "8a7b4ed2-3699-11ee-9a42-f724bfdf52d6", _.syntax.literal);

export type $UserPermissons = {
  "UP_SELECT": $.$expr_Literal<$UserPermissons>;
  "UP_INSERT": $.$expr_Literal<$UserPermissons>;
  "UP_UPDATE": $.$expr_Literal<$UserPermissons>;
  "UP_DELETE": $.$expr_Literal<$UserPermissons>;
} & $.EnumType<"api::account::UserPermissons", ["UP_SELECT", "UP_INSERT", "UP_UPDATE", "UP_DELETE"]>;
const UserPermissons: $UserPermissons = $.makeType<$UserPermissons>(_.spec, "8a7b574c-3699-11ee-b582-a57967fc58be", _.syntax.literal);

export type $VerificationType = {
  "ONBOARDING": $.$expr_Literal<$VerificationType>;
  "TWOFA": $.$expr_Literal<$VerificationType>;
  "TWOFA_PENDING": $.$expr_Literal<$VerificationType>;
  "FORGOT_PASSWORD": $.$expr_Literal<$VerificationType>;
} & $.EnumType<"api::account::VerificationType", ["ONBOARDING", "TWOFA", "TWOFA_PENDING", "FORGOT_PASSWORD"]>;
const VerificationType: $VerificationType = $.makeType<$VerificationType>(_.spec, "8ab5a14a-3699-11ee-ac73-1fb12f6b98b9", _.syntax.literal);

export type $AccountλShape = $.typeutil.flatten<_default.$DatedTypeλShape & _default.$HasAvatarλShape & {
  "api_keys": $.LinkDesc<$ApiKey, $.Cardinality.Many, {}, false, false,  false, false>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "brands": $.LinkDesc<_product.$Brand, $.Cardinality.Many, {}, false, true,  false, false>;
  "<account[is api::account::User]": $.LinkDesc<$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<owner[is api::product::Brand]": $.LinkDesc<_product.$Brand, $.Cardinality.Many, {}, false, false,  false, false>;
  "<owner[is api::product::OwnerCategory]": $.LinkDesc<_product.$OwnerCategory, $.Cardinality.Many, {}, false, false,  false, false>;
  "<account[is api_current_user]": $.LinkDesc<_default.$api_current_user, $.Cardinality.Many, {}, false, false,  false, false>;
  "<owner[is api::product::Product]": $.LinkDesc<_product.$Product, $.Cardinality.Many, {}, false, false,  false, false>;
  "<account": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<owner": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Account = $.ObjectType<"api::account::Account", $AccountλShape, null, [
  ..._default.$DatedType['__exclusives__'],
  ..._default.$HasAvatar['__exclusives__'],
]>;
const $Account = $.makeType<$Account>(_.spec, "8a799dee-3699-11ee-bcdf-412d78e01599", _.syntax.literal);

const Account: $.$expr_PathNode<$.TypeSet<$Account, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Account, $.Cardinality.Many), null);

export type $ApiKeyλShape = $.typeutil.flatten<_default.$DatedTypeλShape & {
  "key": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "permissons": $.PropertyDesc<$ApiPermissons, $.Cardinality.Many, false, false, false, false>;
  "<api_keys[is api::account::Account]": $.LinkDesc<$Account, $.Cardinality.Many, {}, false, false,  false, false>;
  "<api_keys[is api_current_account]": $.LinkDesc<_default.$api_current_account, $.Cardinality.Many, {}, false, false,  false, false>;
  "<api_keys": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $ApiKey = $.ObjectType<"api::account::ApiKey", $ApiKeyλShape, null, [
  ..._default.$DatedType['__exclusives__'],
  {key: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $ApiKey = $.makeType<$ApiKey>(_.spec, "8a7813d4-3699-11ee-89f7-139b49cb700e", _.syntax.literal);

const ApiKey: $.$expr_PathNode<$.TypeSet<$ApiKey, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($ApiKey, $.Cardinality.Many), null);

export type $PasswordλShape = $.typeutil.flatten<_default.$DatedTypeλShape & {
  "hash": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "user": $.LinkDesc<$User, $.Cardinality.AtMostOne, {}, false, true,  false, false>;
  "<password[is api::account::User]": $.LinkDesc<$User, $.Cardinality.AtMostOne, {}, true, false,  false, false>;
  "<password[is api_current_user]": $.LinkDesc<_default.$api_current_user, $.Cardinality.Many, {}, false, false,  false, false>;
  "<password": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Password = $.ObjectType<"api::account::Password", $PasswordλShape, null, [
  ..._default.$DatedType['__exclusives__'],
]>;
const $Password = $.makeType<$Password>(_.spec, "8a8ae982-3699-11ee-91ac-bd49d5a18ad5", _.syntax.literal);

const Password: $.$expr_PathNode<$.TypeSet<$Password, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Password, $.Cardinality.Many), null);

export type $SessionλShape = $.typeutil.flatten<_default.$DatedTypeλShape & {
  "user": $.LinkDesc<$User, $.Cardinality.One, {}, false, false,  false, false>;
  "expires_at": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, false>;
  "<sessions[is api::account::User]": $.LinkDesc<$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<sessions[is api_current_user]": $.LinkDesc<_default.$api_current_user, $.Cardinality.Many, {}, false, false,  false, false>;
  "<sessions": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Session = $.ObjectType<"api::account::Session", $SessionλShape, null, [
  ..._default.$DatedType['__exclusives__'],
]>;
const $Session = $.makeType<$Session>(_.spec, "8a7f6ff8-3699-11ee-a5c0-d12cba308520", _.syntax.literal);

const Session: $.$expr_PathNode<$.TypeSet<$Session, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Session, $.Cardinality.Many), null);

export type $UserλShape = $.typeutil.flatten<_default.$DatedTypeλShape & _default.$HasAvatarλShape & {
  "account": $.LinkDesc<$Account, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "active": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "b2b_product_permissons": $.PropertyDesc<$UserPermissons, $.Cardinality.Many, false, false, false, false>;
  "b2c_product_permissons": $.PropertyDesc<$UserPermissons, $.Cardinality.Many, false, false, false, false>;
  "category_permissons": $.PropertyDesc<$UserPermissons, $.Cardinality.Many, false, false, false, false>;
  "client_product_permissons": $.PropertyDesc<$UserPermissons, $.Cardinality.Many, false, false, false, false>;
  "email": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "user_role": $.PropertyDesc<$AvailableRole, $.Cardinality.AtMostOne, false, false, false, true>;
  "username": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "sessions": $.LinkDesc<$Session, $.Cardinality.Many, {}, false, true,  false, false>;
  "password": $.LinkDesc<$Password, $.Cardinality.One, {}, true, false,  false, false>;
  "<user[is api::account::Session]": $.LinkDesc<$Session, $.Cardinality.Many, {}, false, false,  false, false>;
  "<user[is api::account::Password]": $.LinkDesc<$Password, $.Cardinality.Many, {}, false, false,  false, false>;
  "<user": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $User = $.ObjectType<"api::account::User", $UserλShape, null, [
  ..._default.$DatedType['__exclusives__'],
  ..._default.$HasAvatar['__exclusives__'],
  {email: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {username: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {password: {__element__: $Password, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $User = $.makeType<$User>(_.spec, "8a7b6264-3699-11ee-992e-7ffff50a1bc0", _.syntax.literal);

const User: $.$expr_PathNode<$.TypeSet<$User, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($User, $.Cardinality.Many), null);

export type $VerificationλShape = $.typeutil.flatten<_default.$DatedTypeλShape & {
  "ttarget": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "ttype": $.PropertyDesc<$VerificationType, $.Cardinality.One, false, false, false, false>;
  "algorithm": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "period": $.PropertyDesc<_std.$int64, $.Cardinality.One, false, false, false, false>;
  "expires_at": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, true, false, false>;
  "digits": $.PropertyDesc<_std.$int64, $.Cardinality.One, false, false, false, false>;
  "secret": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
}>;
type $Verification = $.ObjectType<"api::account::Verification", $VerificationλShape, null, [
  ..._default.$DatedType['__exclusives__'],
  {ttarget: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },ttype: {__element__: $VerificationType, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Verification = $.makeType<$Verification>(_.spec, "8ab5ab5e-3699-11ee-9a1b-17f6e42d1d7e", _.syntax.literal);

const Verification: $.$expr_PathNode<$.TypeSet<$Verification, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Verification, $.Cardinality.Many), null);



export { ApiPermissons, AvailableRole, UserPermissons, VerificationType, $Account, Account, $ApiKey, ApiKey, $Password, Password, $Session, Session, $User, User, $Verification, Verification };

type __defaultExports = {
  "ApiPermissons": typeof ApiPermissons;
  "AvailableRole": typeof AvailableRole;
  "UserPermissons": typeof UserPermissons;
  "VerificationType": typeof VerificationType;
  "Account": typeof Account;
  "ApiKey": typeof ApiKey;
  "Password": typeof Password;
  "Session": typeof Session;
  "User": typeof User;
  "Verification": typeof Verification
};
const __defaultExports: __defaultExports = {
  "ApiPermissons": ApiPermissons,
  "AvailableRole": AvailableRole,
  "UserPermissons": UserPermissons,
  "VerificationType": VerificationType,
  "Account": Account,
  "ApiKey": ApiKey,
  "Password": Password,
  "Session": Session,
  "User": User,
  "Verification": Verification
};
export default __defaultExports;
